name: test


on:
  workflow_dispatch: 
    

jobs:

  build:
    name: Staging Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 30
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 12.x

    
    - run: npm install
      name: Install Dependencies

    - run: npm run build
      name: Complile Application
      

    

    
  changeApproval:
    name: Approval From ServiceNow
    needs: build
    runs-on: ubuntu-latest

    steps:     
      - name: Approval From ServiceNow
        uses: ServiceNow/servicenow-devops-change@v3.1.0
        id: create
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Approval From ServiceNow'
          change-request: '{"setCloseCode":"true","autoCloseChange":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '60'
          changeCreationTimeOut: '60'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
      - name: Output of Change Creation
        run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }} and change-request-sys-id = ${{ steps.create.outputs.change-request-sys-id }} " >> $GITHUB_OUTPUT
    
  deploy:
    name: Production Deployment
    needs: changeApproval
    runs-on: ubuntu-latest

    steps:     
      - name: Run Deployment Script
        run: echo "Production Deployment Completed....."

  registerartifact:
    name: Register Artifact
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Register Artifact'
          artifacts: '[{"name": "com:customactiondemo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'

  testresults:
    name: Test Results
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Unit Test Results
        uses: ServiceNow/servicenow-devops-test-report@v3.1.0
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Test Results'
          xml-report-filename: target/Testing Reports/testng-results.xml
  
    # Step 1: Run Tests and Generate XML
  # testresults:
  #   name: Extract of Testing Results
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #       - name: Extract of Testing Results
  #         run:  echo "<testsuites><testsuite name='Example'><testcase name='Test 1'/></testsuite></testsuites>" > results.xml
  #       # Replace with your actual test command

  #   # Step 2: Register Unit Test Results in ServiceNow
  #       - name: Register Unit Test Results in ServiceNow
  #         uses: ServiceNow/devops-integration-action@v4.1.0
  #         with:
  #           credentials: ${{ secrets.SERVICENOW_CREDENTIALS }}
  #           instance: ${{ secrets.SERVICENOW_INSTANCE }}
  #           tool_id: ${{ secrets.SERVICENOW_TOOL_ID }}
  #           result_format: 'xml'
  #           result_path: 'results.xml'
